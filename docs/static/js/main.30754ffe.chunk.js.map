{"version":3,"sources":["components/ReceiveCredential.js","components/Example/index.js","logo.svg","components/Example/forms/CertifiedMillTestReport/index.js","components/Example/forms/DIDAuth/index.js","components/Example/forms/UniversityDegreeCredential/index.js","components/Example/forms/index.js","components/Snackbar/MySnackbarContentWrapper.js","components/Snackbar/index.js","bindingModels/index.js","help.js","components/Theme.js","App.js","serviceWorker.js","index.js"],"names":["options","value","label","ReceiveCredential","React","useState","addToWalletType","tmui","state","setState","style","padding","doSetTmuiProp","prop","variant","marginBottom","id","select","fullWidth","onChange","event","target","map","option","key","forms","onSubmit","formData","a","getVpForAddToWalletType","vp","webCredentialWrapper","global","WebCredential","type","navigator","credentials","store","result","console","log","snackBarMessage","open","message","vertical","horizontal","autoHideDuration","Example","defaultValues","schema","form","model","setModel","showErrors","schemaFormState","setSchemaFormState","Fragment","onModelChange","marginTop","onClick","ajv","Ajv","addSchema","$id","modelWithDefaults","validate","errors","module","exports","CertifiedMillTestReport","DIDAuth","UniversityDegreeCredential","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","default","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","display","alignItems","MySnackbarContentWrapper","props","classes","className","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","action","IconButton","aria-label","color","TSnackbar","handleClose","reason","Snackbar","anchorOrigin","formDataToBindingModel","bindingModel","bindingModels","holder","issuer","credentialSubject","credentialSubjectId","Error","JSON","stringify","endpoint","fetch","method","mode","cache","headers","redirect","referrerPolicy","body","presentation","challenge","domain","proofPurpose","verificationMethod","response","json","credential","vc","font1","font2","font3","Theme","children","this","createMuiTheme","splashImage","light","lighten","darken","secondary","typography","useNextVariants","fontFamily","join","h1","fontWeight","h2","h3","h4","textTransform","letterSpacing","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","overrides","MuiInput","input","MuiInputLabel","root","MuiAppBar","MuiButton","contained","boxShadow","Component","App","useEffect","chapi","bannerColor","href","maxWidth","margin","paddingTop","src","logo","alt","width","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.30754ffe.chunk.js","sourcesContent":["import React from 'react';\n\nimport Typography from '@material-ui/core/Typography'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField/TextField'\nimport Snackbar from './Snackbar';\n\nimport Example from './Example'\n\nimport forms from './Example/forms';\n\nimport { getVpForAddToWalletType } from '../help';\n\nconst options = [\n  {\n    value: 'CertifiedMillTestReport',\n    label: 'Certified Mill Test Report',\n  },\n  {\n    value: 'UniversityDegreeCredential',\n    label: 'University Degree Credential',\n  },\n  {\n    value: 'DIDAuth',\n    label: 'DID Authentication',\n  },\n];\n\nfunction ReceiveCredential() {\n\n  const [state, setState] = React.useState({\n    addToWalletType: 'CertifiedMillTestReport',\n    tmui: {}\n  });\n\n  const handleChange = event => {\n    setState({ ...state, addToWalletType: event.target.value });\n  };\n\n  return (\n    <Paper style={{ padding: '32px' }}>\n      <Snackbar tmui={state.tmui} doSetTmuiProp={(prop) => {\n        setState({\n          ...state,\n          tmui: {\n            ...state.tmui,\n            ...prop\n          }\n        })\n      }} />\n      <Typography variant=\"h6\" style={{ marginBottom: '32px' }}>Add to Wallet</Typography>\n\n      <TextField\n        id=\"outlined-select-addToWalletType\"\n        style={{ marginBottom: '16px' }}\n        select\n        fullWidth\n        label=\"Type\"\n        value={state.addToWalletType}\n        onChange={handleChange}\n        variant=\"outlined\"\n      >\n        {options.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <Example {...forms[state.addToWalletType]} onSubmit={async (formData) => {\n        const vp = await getVpForAddToWalletType(state.addToWalletType, formData)\n        const webCredentialWrapper = new global.WebCredential(vp.type, vp);\n        // Use Credential Handler API to store\n        const result = await navigator.credentials.store(webCredentialWrapper);\n        console.log('Result of receiving via store() request:', result);\n        setState({\n          ...state,\n          tmui: {\n            ...state.tmui,\n            snackBarMessage: {\n              open: true,\n              variant: 'success',\n              message: 'Credential stored in wallet.',\n              vertical: 'top',\n              horizontal: 'right',\n              autoHideDuration: 20 * 1000,\n            },\n          }\n        }\n        );\n      }} />\n    </Paper >\n  );\n}\n\nexport default ReceiveCredential;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button'\nimport { SchemaForm } from 'react-schema-form';\n\nimport Ajv from 'ajv';\n\nfunction Example({ defaultValues, schema, form, onSubmit }) {\n\n    const [model, setModel] = React.useState({});\n\n    const [schemaFormState, setSchemaFormState] = React.useState({\n        showErrors: false\n    })\n\n    return (\n        <React.Fragment>\n            <SchemaForm\n                showErrors={schemaFormState.showErrors}\n                schema={schema}\n                form={form}\n                model={model}\n                onModelChange={(key, value) => {\n                    setModel({\n                        ...model,\n                        [key]: value\n                    })\n                }} />\n            <Button variant={'contained'} style={{ marginTop: '16px' }} onClick={() => {\n                let ajv = new Ajv();\n                ajv.addSchema(schema, schema.$id)\n                let modelWithDefaults = {\n                    ...defaultValues,\n                    ...model\n                }\n                let valid = ajv.validate(\n                    schema,\n                    modelWithDefaults\n                );\n                if (!valid) {\n                    setSchemaFormState({\n                        ...schemaFormState,\n                        showErrors: true\n                    })\n                    console.log(ajv.errors)\n                } else {\n                    setSchemaFormState({\n                        ...schemaFormState,\n                        showErrors: false\n                    })\n                    setModel({})\n                    onSubmit({ ...modelWithDefaults });\n                }\n            }}>Receive</Button>\n        </React.Fragment>\n\n    );\n}\n\nexport default Example;\n","module.exports = __webpack_public_path__ + \"static/media/logo.33b194d8.svg\";","import form from './form'\nimport schema from './schema'\nimport defaultValues from './defaultValues'\n\nexport default {\n    form,\n    schema,\n    defaultValues\n}","import form from './form'\nimport schema from './schema'\nimport defaultValues from './defaultValues'\n\nexport default {\n    form,\n    schema,\n    defaultValues\n}","import form from './form'\nimport schema from './schema'\nimport defaultValues from './defaultValues'\n\nexport default {\n    form,\n    schema,\n    defaultValues\n}","import CertifiedMillTestReport from './CertifiedMillTestReport'\nimport DIDAuth from './DIDAuth'\nimport UniversityDegreeCredential from './UniversityDegreeCredential'\n\nexport default {\n    \"CertifiedMillTestReport\": CertifiedMillTestReport,\n    \"DIDAuth\": DIDAuth,\n    \"UniversityDegreeCredential\": UniversityDegreeCredential\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n    default: InfoIcon,\n};\n\nconst useStyles1 = makeStyles(theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\nfunction MySnackbarContentWrapper(props) {\n    const classes = useStyles1();\n    const { className, message, onClose, variant, ...other } = props;\n    // eslint-disable-next-line\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            // eslint-disable-next-line\n            className={clsx(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)} />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>,\n            ]}\n            {...other}\n        />\n    );\n}\n\nMySnackbarContentWrapper.propTypes = {\n    className: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning', 'default'])\n        .isRequired,\n};\n\nexport { MySnackbarContentWrapper };\nexport default MySnackbarContentWrapper;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport MySnackbarContentWrapper from './MySnackbarContentWrapper';\n\nfunction TSnackbar(props) {\n    const {\n        open,\n        variant,\n        message,\n        autoHideDuration,\n        vertical,\n        horizontal,\n    } = props.tmui.snackBarMessage || {\n        variant: 'default',\n        vertical: 'bottom',\n        horizontal: 'right',\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        props.doSetTmuiProp({\n            snackBarMessage: {\n                ...props.tmui.snackBarMessage,\n                open: false,\n            },\n        });\n    };\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical,\n                    horizontal,\n                }}\n                open={open}\n                autoHideDuration={autoHideDuration}\n                onClose={handleClose}\n            >\n                <MySnackbarContentWrapper\n                    onClose={handleClose}\n                    variant={variant}\n                    message={message}\n                />\n            </Snackbar>\n        </div>\n    );\n}\n\nTSnackbar.propTypes = {\n    tmui: PropTypes.object.isRequired,\n    doSetTmuiProp: PropTypes.func.isRequired,\n};\n\nexport { TSnackbar as Snackbar };\nexport default TSnackbar;","import CertifiedMillTestReport from './CertifiedMillTestReport.json'\nimport UniversityDegreeCredential from './UniversityDegreeCredential.json'\nimport DIDAuth from './DIDAuth.json'\n\nexport default {\n    'DIDAuth': DIDAuth,\n    'CertifiedMillTestReport': CertifiedMillTestReport,\n    'UniversityDegreeCredential': UniversityDegreeCredential\n}","\nimport bindingModels from './bindingModels'\n\nconst formDataToBindingModel = (addToWalletType, formData) => {\n  let bindingModel = bindingModels[addToWalletType];\n  switch (addToWalletType) {\n    case 'DIDAuth': {\n      bindingModel = {\n        ...bindingModel,\n        holder: formData.holder,\n      }\n      break;\n    }\n    case 'CertifiedMillTestReport': {\n      bindingModel = {\n        ...bindingModel,\n        issuer: formData.issuer,\n        credentialSubject: {\n          ...bindingModel.credentialSubject,\n          id: formData.credentialSubjectId\n        }\n      }\n      break;\n    }\n    case 'UniversityDegreeCredential': {\n      bindingModel = {\n        ...bindingModel,\n        issuer: formData.issuer,\n        credentialSubject: {\n          ...bindingModel.credentialSubject,\n          id: formData.credentialSubjectId\n        }\n      }\n      break;\n    }\n    default:\n      throw new Error('Unknown addToWalletType type.')\n  }\n  return bindingModel;\n}\n\nexport const getVpForAddToWalletType = async (addToWalletType, formData) => {\n  console.log(JSON.stringify(formData, null, 2))\n  let endpoint = 'https://vc.transmute.world/vc-data-model/credentials'\n  const bindingModel = formDataToBindingModel(addToWalletType, formData)\n\n  if (addToWalletType === 'DIDAuth') {\n    endpoint = 'https://vc.transmute.world/vc-data-model/presentations'\n\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify({\n        presentation: bindingModel, options: {\n          challenge: formData.challenge,\n          domain: formData.domain,\n          proofPurpose: formData.proofPurpose,\n          verificationMethod: formData.verificationMethod\n        }\n      })\n    });\n    let vp = await response.json();\n    return vp;\n  } else {\n\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer',\n      body: JSON.stringify({ credential: bindingModel })\n    });\n    let vc = await response.json();\n    return {\n      \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://www.w3.org/2018/credentials/examples/v1\"\n      ],\n      \"type\": \"VerifiablePresentation\",\n      \"verifiableCredential\": [vc]\n    }\n  }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport { darken, lighten } from '@material-ui/core/styles/colorManipulator';\n\nconst primaryColor = '#594aa8';\nconst secondaryColor = '#fcb373';\n\nconst font1 = '\"Rajdhani\"';\nconst font2 = '\"Roboto Condensed\"';\nconst font3 = '\"Lato\"';\n\nconst fontWeightLight = 300;\nconst fontWeightRegular = 400;\nconst fontWeightMedium = 600;\n\nclass Theme extends Component {\n    render() {\n        const { children } = this.props;\n        const theme = createMuiTheme({\n            splashImage: '',\n            palette: {\n                type: 'light',\n                primary: {\n                    light: lighten(primaryColor, 0.07),\n                    main: primaryColor,\n                    dark: darken(primaryColor, 0.07),\n                },\n                secondary: {\n                    light: lighten(secondaryColor, 0.07),\n                    main: secondaryColor,\n                    dark: darken(secondaryColor, 0.07),\n                },\n            },\n            typography: {\n                useNextVariants: true,\n                fontSize: 16,\n                fontFamily: [font1, font2, font3].join(','),\n                h1: {\n                    fontFamily: font1,\n                    fontWeight: fontWeightMedium,\n                },\n                h2: {\n                    fontFamily: font1,\n                    fontWeight: fontWeightMedium,\n                },\n                h3: {\n                    fontFamily: font1,\n                    fontWeight: fontWeightMedium,\n                },\n                h4: {\n                    fontFamily: font2,\n                    textTransform: 'uppercase',\n                    letterSpacing: '0.1em',\n                    fontWeight: fontWeightRegular,\n                },\n                h5: {\n                    fontFamily: font2,\n                    textTransform: 'uppercase',\n                    letterSpacing: '0.1em',\n                    fontWeight: fontWeightRegular,\n                },\n                h6: {\n                    fontFamily: font2,\n                    textTransform: 'uppercase',\n                    letterSpacing: '0.1em',\n                    fontWeight: fontWeightRegular,\n                },\n                subtitle1: {\n                    fontFamily: font1,\n                    fontWeight: fontWeightRegular,\n                },\n                subtitle2: {\n                    fontFamily: font2,\n                    fontWeight: fontWeightRegular,\n                },\n                body1: {\n                    fontFamily: font3,\n                    fontWeight: fontWeightRegular,\n                },\n                body2: {\n                    fontFamily: font3,\n                    fontWeight: fontWeightRegular,\n                },\n                button: {\n                    fontFamily: font2,\n                    fontWeight: fontWeightRegular,\n                },\n                caption: {\n                    fontFamily: font2,\n                    fontWeight: fontWeightRegular,\n                },\n                overline: {\n                    fontFamily: font2,\n                    letterSpacing: '0.15em',\n                    textTransform: 'uppercase',\n                    fontWeight: fontWeightLight,\n                },\n            },\n\n            overrides: {\n                MuiInput: {\n                    // Name of the component ⚛️ / style sheet\n                    input: {\n                        fontFamily: font3,\n                    },\n                },\n                MuiInputLabel: {\n                    // Name of the component ⚛️ / style sheet\n                    root: {\n                        fontFamily: font2,\n                    },\n                },\n                MuiAppBar: {\n                    root: {\n                        // boxShadow: 'none',\n                    },\n                },\n                MuiButton: {\n                    // Name of the rule\n                    contained: {\n                        boxShadow: 'none',\n                    },\n                },\n            },\n        });\n        return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n    }\n}\n\nTheme.propTypes = {\n    children: PropTypes.any.isRequired,\n};\n\nexport default Theme;","import React from 'react';\nimport * as chapi from 'credential-handler-polyfill';\nimport GithubCorner from 'react-github-corner';\n\n\nimport Theme from './components/Theme'\nimport './App.css';\n\nimport ReceiveCredential from './components/ReceiveCredential'\nimport logo from './logo.svg';\n\nfunction App() {\n  React.useEffect(() => {\n    (async () => {\n      try {\n        await chapi.loadOnce();\n      } catch (e) {\n        console.error('Error in loadOnce:', e);\n      }\n    })();\n  })\n  return (\n    <Theme>\n      <div className=\"App\">\n        <GithubCorner bannerColor={'#594aa8'} href=\"https://github.com/transmute-industries/issuer.interop.transmute.world\" />\n        <div style={{ maxWidth: '512px', margin: 'auto', paddingTop: '10%', }}>\n          <img src={logo} alt=\"transmute logo\" style={{ width: '50%', margin: 'auto', display: 'block', padding: '32px 0px' }} />\n          <ReceiveCredential />\n        </div>\n      </div>\n    </Theme>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}